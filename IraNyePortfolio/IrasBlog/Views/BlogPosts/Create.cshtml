@model IrasBlog.Models.BlogPost

<!-- Page Header -->
<header class="masthead" style="background-image: url('/Images/post-bg.jpg')">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="post-heading">
                    <h1>Write Something Inspiring (or not...)</h1>
                </div>
            </div>
        </div>
    </div>
</header>

@using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <h4>Create Blog Post</h4>
                <hr />
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @id="textTitle" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control", @id="textAbstract"  } })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlogPostBody, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlogPostBody, new { htmlAttributes = new { @class = "form-control", @id="BlogPostBody"  } })
                @Html.ValidationMessageFor(model => model.BlogPostBody, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10">
                    <input name="imageFile" type="file" class="form-control" id="fileUpload" style="height: 45px;" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Published)
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-outline-dark" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function(){
            $(".masthead").css("background-image", "url(/Images/post-bg.jpg)");
            @if (!String.IsNullOrWhiteSpace(@Model.ImagePath))
            {
                @: $(".masthead").css("background-image", "url(\"@Model.ImagePath\")");
            }

            var titleLimit = 250;

            $('#textTitle').keyup(function () {

                $(this).val($(this).val().substring(0, titleLimit));
            });

            var abstractLimit = 500;

            $('#textAbstract').keyup(function () {

                $(this).val($(this).val().substring(0, abstractLimit));
            });

            var bodyLimit = 8000;

            $('#textBody').keyup(function () {

                $(this).val($(this).val().substring(0, bodyLimit));
            });

        });
    </script>
}
