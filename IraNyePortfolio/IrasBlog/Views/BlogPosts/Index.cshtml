@using System.Activities.Statements
@model IEnumerable<IrasBlog.Models.BlogPost>

@{
    ViewBag.Title = "Index";
}

<!-- Page Header -->
<header class="masthead" style="background-image: url('/Images/post-bg.jpg')">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="post-heading">
                    @if (@Model.Count() == 1)
                    {
                        <h1>There is @Model.Count() Blog!</h1>
                    }
                    else
                    {
                        <h1>There are @Model.Count() Blogs!</h1>
                    }
                </div>
            </div>
        </div>
    </div>
</header>

@if (User.IsInRole("Admin"))
{
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-8 mx-auto">
                <p>
                    @Html.ActionLink("Create New", "Create")
                </p>
                <table class="table" id="blogs-table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Created)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Updated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Abstract)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ImagePath)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Published)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Created)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Updated)
                            </td>
                            <td>
                                @Html.ActionLink(item.Title, "Details", new { slug = item.Slug })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Abstract)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ImagePath)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Published)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { slug = item.Slug })
                                @Html.ActionLink("Details", "Details", new { slug = item.Slug })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "confirmDelete" })
                            </td>
                        </tr>
                    }

                </table>
            </div>
        </div>
    </div>
}

@section scripts
{
    <script>

        $(document).ready(function(){
            var defaultDeleteText = "Delete";
            $(".confirmDelete").click(function (e) {
                console.log("confirmDelete?");
                var actionVal = $(this).text();
                if (actionVal.toUpperCase() === defaultDeleteText.toUpperCase()) {
                    e.preventDefault();
                    $(this).text("Confirm Delete?");
                }
            });
            $(".confirmDelete").blur(function () {
                $(this).text(defaultDeleteText);
            });
        });
    </script>
}
