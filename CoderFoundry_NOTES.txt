*** Fix Before Gihub Push ***
Startup.Auth.cs
Migrations\Configuration.cs


*** My Work ***
Deliverables due 10/07
Check Code into Github
Sum of all Fears exercise
Add tests w/ Selenium

** My Website **
Create "put in random numbers" button into applicable modals
Move facts-from-five error control into right-side column
Fix main page update logo and re-position
Use technology logos (e.g., for HTML, HTML5, jQuery, etc).
Perl (or other) script to perform replacement of code within <pre> tags from main.js
Contact Form (w/ configured SMTP)
Invalid inputs should be indicated w/ red outline & associated message.
Determine how to test on mobile device
Replace Project Modals w/: MyBlog, BugTracker, Financial Portal, Mobile App

* Bugs *
Search & Replace modal fails to clear output box (probably bad jQuery)

*** BugTracker ***
** Other **
Clean Up ProjectMembersViewModel (don't need separate AllUsers property)
Refactor (make DRY) code to bring in attachment
Support non-image attachments
Be able to filter Project Members Table to show/un-show Users who have/don't have a checkbox
Update "MyProjects" Page w/ TicketsCount, when clicked on gives a list of tickets for that Project
Separate DB for Demo Interface

** Refs **
Link to another controller with parameter (E.g., Link to Project Details from TicketIndex View: @Html.ActionLink(item.Project.Name, "Details", "Projects", new { id = item.ProjectId }, null)
update-database -verbose -TargetMigration:"TicketCollectionUpdatesAndStrLenLimits"
UpdatedDateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, DateTime.Now.Hour, DateTime.Now.Minute, DateTime.Now.Second);
return RedirectToAction("Details", "Tickets", new {ticket.Id});
	$(document).ready(function() {
    });
	


                    <dt>
                        @Html.DisplayName("Update Assignee")
                    </dt>

                    <dd>
                        @using (Html.BeginForm("AssignTicket", "Tickets", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <div class="row">
                                <div class="col-md-12">
                                    @Html.DropDownList("AssignedToUserId", null, "-- Select User --", new {@class = "controlWide"})
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6" style="margin-top: 5px;">
                                    <button id="btnSubmit" type="submit" class="btn btn-primary controlWide">Save</button>
                                </div>
                            </div>
                        }
                    </dd>

** Deliverables **
* Week 1 *
Authenticated users must be able to change their name and password
Authenticated users must be able to recover a lost password
Create Projects – Administrators and Project Managers must be able to create new projects
Edit Projects – Administrators and Project Managers must be able to edit existing projects
List Projects – Administrators, Project Managers, Developers, and Submitters must be able to view a list of projects they are assigned to. Administrators and Project Managers must be able to view a separate list of all projects. 
Administrators and Project Managers must be able to assign and unassign users to and from projects. 
Authenticated users must be able to change their name and password and Recover Lost Password
If Role=PM, assign to Project on Creation
Add "Create Ticket" feature in Project Index, Project Detail
[Register, Login, ExternalLoginConfirmation]ViewModel should sub-class another class that has First,Last,Display Name
Filter Manage Roles Table - be able to select users w/o Roles and group-assign

* Week 2 *
Tickets: 
	Authenticated users can view a list of all tickets
	Project Managers can view a tickets belonging to the projects to which they are assigned
	Developers can view a list of all tickets belonging to the projects to which they are assigned
	Developers can view a list of all tickets to which they are assigned
	Submitters can view a list of all tickets which they own
	All ticket lists must be sortable by column heading
	All ticket lists must be searchable by text fields (full text search)
	All ticket lists must be paged
	Project Managers can edit tickets belonging to their Projects and assign them to Developers
	Developers can edit tickets to which they are assigned (Cannot un-assign themselves.  If Dev is taken off a project, their Tickets revert to Unassigned)

** Test Cases **
If a user Role is switched (e.g., Submitter => Devloper) "Show My Tickets" no longer shows Tickets owned by user formerly was Submitter


** Blog Site **
Update Edit Blog page to allow upload of image
Update image in Edit Blog page to match Details
Figure what exactly what Remember Me checkbox does
Show a blog's picture on the index page (both).
Update "Back to List" in Blog Details if SearchStr is not empty
Blog Body formatting fails to preserve newlines.
Nuke and re-create github repo coder-foundry (or re-generate Google API & Facebook Keys)

* BugTracker *
https://localhost:44340/


* Email Provider *
Google: https://support.google.com/a/answer/176600?hl=en
Yahoo: https://help.yahoo.com/kb/SLN4724.html
Outlook: https://www.outlook-apps.com/outlook-com-pop-settings/
More…: https://www.arclab.com/en/kb/email/list-of-smtp-and-pop3-servers-mailserver-list.html

Add Additional Fields in Create User (Register) Page.
Disallow Modifications made by Moderators
View All Posts vs Only Published Posts
Change "Hello blahblah@foo.com" to DisplayName
Change Manage Page
Switch Detail action to use slug instead of id

* Fix layout/formatting issues *
Blog Index (Admin All Blogs Page)
Log In

* Tests *
Test order of Blogs
Test that normal user or moderator has no option to: Edit,Delete,etc Blogs
Limit # Blogs on Index and provide "See Older Posts" button
Test which page gets loaded after Blog:
	Edit
	Delete

* Template *
Choose AN APPROVED TEMPLATE that has everthing you need: e.g., tabs, toggle effects (to collapse/show blocks of text), display code
Create C# Asp.Net (.Net Framework) project => Empty
Import main html file (e.g., index.html)
Change <title> content
ONLY drag into project file(s) that are absolutely necessary.
Add folders: Content, Scripts and import each referenced file into the project (CSS => Content, JS => Scripts)
Update references USING THE SAME ORDER
Add folder: Images and import (referenced image files (or all image files))
Fix errors (e.g., missing fonts)

* Customize *
Change text, map, layout, images
Navigation elements should include at least: HOME, ABOUT ME, PROJECTS, CODING CHALLENGES, Contact Me
favicon
Update footer to include original info plus: "Modified by Ira Nye"

Portfolio, Coding Challenges sections should be consistent (e.g., copy + paste)


* Portfolio *

** Homework **
W3 schools tutorials: JavaScript, JQuery, Bootstrap 4
Choose a Bootstrap template to use

