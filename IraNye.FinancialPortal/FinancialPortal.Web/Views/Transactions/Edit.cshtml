@model FinancialPortal.Web.Models.Transaction

@{
    ViewBag.Title = "Edit Transaction";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Edit Transaction - @Model.Memo</h6>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.Hidden("createdById", @Model.CreatedById)

                <div class="form-group">
                    @Html.LabelFor(model => model.BankAccountId, "Bank Account", htmlAttributes: new { @class = "col" })
                    <div class="col-md-10">
                        @Html.DropDownList("BankAccountId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BudgetItemId, "Budget Item", htmlAttributes: new { @class = "col" })
                    <div class="col-md-10">
                        @Html.DropDownList("BudgetItemId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BudgetItemId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionTypeId, "Transaction Type", htmlAttributes: new { @class = "col" })
                    <div class="col-md-10">
                        @Html.DropDownList("TransactionTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TransactionTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <p style="margin: 12px;">
            @Html.ActionLink("Bank Account Details", "Details", "BankAccounts", new { id = Model.BankAccountId }, null) |
            <span>@Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "confirmDelete" })&nbsp;|</span>
            @Html.ActionLink("Household Dashboard", "Dashboard", "Home")
        </p>

    </div> <!-- end card-body -->
</div>

@section scripts
{
    <script>

        $(document).ready(function () {
            console.log("READY!");

            var defaultDeleteText = "Delete";
            $(".confirmDelete").click(function (e) {
                var actionVal = $(this).text();
                if (actionVal.toUpperCase() === defaultDeleteText.toUpperCase()) {
                    e.preventDefault();
                    $(this).text("Confirm Delete?");
                }
            });
            $(".confirmDelete").blur(function () {
                $(this).text(defaultDeleteText);
            });
        });
    </script>
}
