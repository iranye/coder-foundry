@using BugTracker.Models
@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Dashboard";
}

<style>
    .detail-label {
        font-size: .8em;
        text-transform: uppercase;
    }
    div.detail-label {
        margin-top: 4px;
    }
    .comment-metadata {
        font-size: .7em;
        font-style: italic;
        display: block;
        margin: 0;
        text-align: left;
    }
</style>

<h2>Ticket Dashboard - @Model.Title</h2>

<!-- Content Row -->
<div class="row">

    <!-- Content Column -->
    <div class="col-lg-6 mb-4">

        <!-- Ticket Details -->
        <div class="card shadow mb-4">
            <a href="#ticketDetails" class="d-block card-header py-3 detail-label" data-toggle="collapse" role="button" aria-expanded="true" aria-controls="ticketDetails">
                <h6 class="m-0 font-weight-bold text-primary">Ticket Details</h6>
            </a>
            <div class="collapse show" id="ticketDetails">
                <div class="card-body">
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayNameFor(model => model.Title)
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.Title)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayNameFor(model => model.Description)
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.Description)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayName("Status")
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.TicketStatus.Name)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayName("Priority")
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.TicketPriority.Name)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayNameFor(model => model.TicketType.Name)
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.TicketType.Name)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            Owner
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.Owner.DisplayName)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            Assigned To
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.AssignedTo.DisplayName)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayNameFor(model => model.Created)
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.Created)
                        </div>
                    </div>
                    <div class="row">
                        <div class="h5 col-sm-6 detail-label">
                            @Html.DisplayNameFor(model => model.Updated)
                        </div>
                        <div class="col-sm-6">
                            @Html.DisplayFor(model => model.Updated)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <a href="#ticketComments" class="d-block card-header py-3 detail-label" data-toggle="collapse" role="button" aria-expanded="true" aria-controls="ticketComments">
                <h6 class="m-0 font-weight-bold text-primary">Comments</h6>
            </a>
            <div class="collapse show" id="ticketComments">
                <div class="card-body">
                    @foreach (var comment in Model.Comments.OrderBy(c => c.Created))
                    {
                        <div class="row">
                            <div class="col-sm-3 comment-metadata">
                                @comment.Author.DisplayName @comment.Created.ToString("M/d/yy")
                            </div>
                            <div class="col-sm-6">
                                <div>
                                    @comment.CommentBody
                                </div>
                            </div>
                        </div>
                        <hr />
                    }
                    @if (User.Identity.IsAuthenticated && ViewBag.CanAddContent)
                    {
                        using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                        {
                            <div class="row">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Id)

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.TextArea("CommentBody", new { row = 5, cols = 30, placeholder = "Add Comment...", id = "txtComment", @class = "text-area-wide" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group" style="margin-top: 10px;">
                                    <div class="col-md-12">
                                        <button class="btn btn-primary" type="submit" id="btnSubmitComment">Comment</button>
                                    </div>
                                </div>
                            </div>
                        }
                    }

                </div> <!-- end card-body -->
            </div>
        </div>

        <!-- Collapsible Card Example -->
        <div class="card shadow mb-4">
            <!-- Card Header - Accordion -->
            <a href="#ticketAttachments" class="d-block card-header py-3 detail-label" data-toggle="collapse" role="button" aria-expanded="true" aria-controls="ticketAttachments">
                <h6 class="m-0 font-weight-bold text-primary">Attachments</h6>
            </a>
            <!-- Card Content - Collapse -->
            <div class="collapse show" id="ticketAttachments">
                <div class="card-body">
                    @foreach (var attachment in Model.Attachments.OrderBy(a => a.CreatedDateTime))
                    {
                        <div class="row">
                            <div class="col-sm-3">
                                <div class=" comment-metadata">
                                    @attachment.CreatedBy.DisplayName @attachment.CreatedDateTime.ToString("M/d/yy")
                                </div>
                                <br/>
                                <div class="attach-desc">
                                    @attachment.Description
                                </div>
                            </div>
                            <div class="col-sm-9">
                                <img src="@attachment.MediaPath" alt="@attachment.MediaPath" title="@attachment.MediaPath" height="250" />
                            </div>
                        </div>
                        <hr />
                    }
                    @if (User.Identity.IsAuthenticated && ViewBag.CanAddContent)
                    {
                        using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("CustomError", new { @class = "text-danger" })

                            <div class="row" style="margin-left: 1px;">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="row">
                                            @Html.Label("Attachment")
                                            <input name="attachmentFile" type="file" class="form-control" id="fileUpload" style="height: 45px;" />
                                        </div>
                                        <div class="row">
                                            @Html.Label("Description")
                                            @Html.Editor("attachmentDescription", new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <button class="btn btn-primary" type="submit" id="btnSubmit">Attach</button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div> <!-- end card-body -->
            </div>
        </div>
    </div>

    <!-- Project -->
    <div class="col-lg-6 mb-4">
        <!-- Ticket Details -->
        <div class="card shadow mb-4">
            <div class="card-header py-3 bg-success">
                <h6 class="m-0 font-weight-bold text-white">Project Details</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="h5 col-sm-6 detail-label">
                        @Html.DisplayNameFor(model => model.Project.Name)
                    </div>
                    <div class="col-sm-6">
                        @Html.ActionLink(Model.Project.Name, "Details", "Projects", new { id = Model.ProjectId }, null)
                    </div>
                </div>
                <div class="row">
                    <div class="h5 col-sm-6 detail-label">
                        @Html.DisplayNameFor(model => model.Project.Description)
                    </div>
                    <div class="col-sm-6">
                        @Html.DisplayFor(model => model.Project.Description)
                    </div>
                </div>
                <div class="row">
                    <div class="h5 col-sm-6 detail-label">
                        @Html.DisplayName("Members Count")
                    </div>
                    <div class="col-sm-6">
                        @Html.DisplayFor(model => model.Project.Members.Count)
                    </div>
                </div>
            </div>
        </div>

        <!-- Collapsable Card Example -->
        <div class="card shadow mb-4">
            <!-- Card Header - Accordion -->
            <a href="#ticketHistories" class="d-block card-header py-3 detail-label" data-toggle="collapse" role="button" aria-expanded="true" aria-controls="ticketHistories">
                <h6 class="m-0 font-weight-bold text-primary">Ticket History</h6>
            </a>
            <!-- Card Content - Collapse -->
            <div class="collapse show" id="ticketHistories">
                <div class="card-body">
                    @foreach (TicketHistory ticketEvent in Model.Events.OrderByDescending(a => a.ChangedDateTime))
                    {
                        <div class="row">
                            <div class="h5 col-sm-6 detail-label">
                                <span class="font-weight-bold">@Html.DisplayFor(t => ticketEvent.Property)</span> modified
                            </div>
                            <div class="col-sm-6">
                                @ticketEvent.OldValue => @ticketEvent.NewValue
                            </div>
                        </div>
                        <div class="row">
                            <div class="h5 col-sm-6 detail-label">
                                @Html.DisplayNameFor(t => ticketEvent.ChangedDateTime)
                            </div>
                            <div class="col-sm-6">
                                @Html.DisplayFor(t => ticketEvent.ChangedDateTime)
                            </div>
                        </div>
                        <div class="row">
                            <div class="h5 col-sm-6 detail-label">
                                @Html.DisplayNameFor(t => ticketEvent.ChangedBy)
                            </div>
                            <div class="col-sm-6">
                                @Html.DisplayFor(t => ticketEvent.ChangedBy.DisplayName)
                            </div>
                        </div>
                        <hr />
                    }
                </div> <!-- end card-body -->
            </div>
        </div>
    </div>

</div>

<p>
    @if (User.Identity.IsAuthenticated && ViewBag.CanEdit)
    {
        <span>@Html.ActionLink("Edit", "Edit", new { id = Model.Id })&nbsp;|</span>
    }
    @Html.ActionLink("Back to List", "Index")
</p>
