@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Edit Ticket - @Model.Title</h6>
    </div>
    <div class="card-body">
        @if (User.Identity.IsAuthenticated)
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.OwnerId)
                    @Html.HiddenFor(model => model.ProjectId)
                    @Html.HiddenFor(model => model.Created)
                    @Html.Hidden("assigneeId", Model.AssignedToId)
                    @Html.Hidden("statusId", Model.TicketStatusId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketPriorityId, "TicketPriority", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "TicketStatus", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketTypeId, "TicketType", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerId, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("OwnerId", null, "-- No Owner --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedToId, "AssignedTo", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("AssignedToId", null, "-- UnAssigned --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedToId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @if (ViewBag.CanEdit)
                    {
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            }
        }
        <div class="form-group">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div> <!-- end card-body -->
</div>


@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("select[name='ProjectId']").prop("disabled", true);
            var canChangeAssignment = "@ViewBag.CanChangeAssignment";
            var canChangeOwner = "@ViewBag.CanChangeOwner";

            if (canChangeAssignment === "False") {
                $("select[name='AssignedToId']").prop("disabled", true);
            }
            
            if (canChangeOwner === "False") {
                $("select[name='OwnerId']").prop("disabled", true);
            }
            
            var canChangeStatus = "@ViewBag.CanChangeStatus";
            console.log("canChangeStatus is: " + canChangeStatus);

            if (canChangeStatus === "False") {
                $("select[name='TicketStatusId']").prop("disabled", true);
            }
        });
    </script>
}