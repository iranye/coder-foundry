@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}
<style>
    
    .comment-metadata {
        font-size: 1em;
        font-style: italic;
        display: block;
        margin: 0;
        text-align: left;
    }

    .text-area-wide {
        min-width: 380px;
    }
</style>
<h2>Ticket - @Model.Title</h2>

<!-- Ticket Content -->
<article>
    <div class="container">
        <div class="row">
            <div>
                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        @Html.DisplayName("Assignee")
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.AssignedTo.DisplayName)
                    </dd>
                    
                    <dt>
                        @Html.DisplayName("Owner")
                    </dt>

                    <dd>
                        <span>@Html.DisplayFor(model => model.Owner.DisplayName)&nbsp;&lt;@Html.DisplayFor(model => model.Owner.Email)&gt;</span>
                    </dd>

                    <dt>
                        @Html.DisplayName("Project")
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Project.Name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TicketPriority.Name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TicketPriority.Name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TicketStatus.Name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TicketStatus.Name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TicketType.Name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TicketType.Name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Created)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Created)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Updated)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Updated)
                    </dd>

                </dl>
            </div>
            <div class="row">
                <div class="col-lg-8 col-md-12">
                    <hr />
                    <h1>Attachments</h1>
                    <hr />
                    @foreach (var attachment in Model.Attachments.OrderBy(a => a.CreatedDateTime))
                    {
                        <div class="row">
                            <div class="col-sm-3 comment-metadata">
                                @attachment.CreatedBy.DisplayName @attachment.CreatedDateTime.ToString("M/d/yy")
                            </div>
                            <div class="col-sm-9">
                                <img src="@attachment.MediaPath" height="250" />
                            </div>
                        </div>
                        <hr />
                    }
                </div>
            </div>

            <div class="row">
                @if (User.Identity.IsAuthenticated && ViewBag.CanAddContent)
                {
                    using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input name="attachmentFile" type="file" class="form-control" id="fileUpload" style="height: 45px;" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                <button class="btn btn-default" type="submit" id="btnSubmit">Attach</button>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="row">
                <div class="col-lg-8 col-md-12">
                    <hr />
                    <h1>Comments</h1>
                    <hr />
                    @foreach (var comment in Model.Comments.OrderBy(c => c.Created))
                    {
                        <div class="row">
                            <div class="col-sm-3 comment-metadata">
                                @comment.Author.DisplayName @comment.Created.ToString("M/d/yy")
                            </div>
                            <div class="col-sm-6">
                                <div>
                                    @comment.CommentBody
                                </div>
                            </div>
                        </div>
                        <hr />
                    }
                    @if (User.Identity.IsAuthenticated && ViewBag.CanAddContent)
                    {
                        using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                        {
                            <div class="row">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Id)

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.TextArea("CommentBody", new { row = 5, cols = 1000, placeholder = "Add Comment...", id = "txtComment", @class = "text-area-wide" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group" style="margin-top: 10px;">
                                    <div class="col-md-12">
                                        <button class="btn btn-default" type="submit" id="btnSubmitComment">Comment</button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    <hr />
                    <div class="row">
                        <span class="col-md-3">
                            @if (User.Identity.IsAuthenticated && ViewBag.CanEdit)
                            {
                                <strong>@Html.ActionLink("Edit", "Edit", new { id = Model.Id })&nbsp;|</strong>
                            }
                            <strong>@Html.ActionLink("Back to List", "Index")</strong>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</article>

@section scripts
{
    <script>

        $('#btnSubmitComment').prop("disabled", true);
        var initVal = $('#txtComment').val();

        $(document).ready(function(){
            var commentLimit = 1500;

            $('#txtComment').keyup(function () {

                // Enable Submit only when a Comment is entered.
                if($('#txtComment').val().length > 0 && $('#txtComment').val() !== initVal) {
                    $('#btnSubmitComment').prop("disabled", false);
                }else {
                    $('#btnSubmitComment').prop("disabled", true);
                }

                $(this).val($(this).val().substring(0, commentLimit));
            });
        });
    </script>
}
